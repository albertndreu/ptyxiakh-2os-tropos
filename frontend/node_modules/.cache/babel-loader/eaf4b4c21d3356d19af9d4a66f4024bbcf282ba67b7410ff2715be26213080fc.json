{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\OneDrive\\\\\\u03A5\\u03C0\\u03BF\\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2\\\\FrontEnd\\\\frontend\\\\src\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const username = localStorage.getItem(\"username\");\n  const fetchNotifications = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/get_notifications/${username}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setNotifications(response.data.notifications);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching notifications:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {\n        window.location.href = '/login';\n      }\n    }\n  }, [username]);\n  useEffect(() => {\n    fetchNotifications();\n    // Poll for new notifications every 30 seconds\n    const interval = setInterval(fetchNotifications, 30000);\n    return () => clearInterval(interval);\n  }, [fetchNotifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Document Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Document Added to Blockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }, this), \" \", notification.sender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Transaction ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 28\n          }, this), \" \", notification.transactionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Document Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this), \" \", notification.documentHash]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this), \" \", new Date(notification.timestamp * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Notifications, \"I4k/Rt4CDTGDuMSqY3zeiBhHoPk=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","username","localStorage","getItem","fetchNotifications","token","response","get","headers","data","error","_error$response","console","status","window","location","href","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","index","sender","transactionId","documentHash","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/alber/OneDrive/Υπολογιστής/FrontEnd/frontend/src/Notifications.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Notifications = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const fetchNotifications = useCallback(async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:5000/get_notifications/${username}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            setNotifications(response.data.notifications);\r\n        } catch (error) {\r\n            console.error('Error fetching notifications:', error);\r\n            if (error.response?.status === 403) {\r\n                window.location.href = '/login';\r\n            }\r\n        }\r\n    }, [username]);\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n        // Poll for new notifications every 30 seconds\r\n        const interval = setInterval(fetchNotifications, 30000);\r\n        return () => clearInterval(interval);\r\n    }, [fetchNotifications]);\r\n\r\n    return (\r\n        <div className=\"notifications-container\">\r\n            <h2>Document Notifications</h2>\r\n            <div className=\"notifications-list\">\r\n                {notifications.map((notification, index) => (\r\n                    <div key={index} className=\"notification-card\">\r\n                        <h3>Document Added to Blockchain</h3>\r\n                        <p><strong>From:</strong> {notification.sender}</p>\r\n                        <p><strong>Transaction ID:</strong> {notification.transactionId}</p>\r\n                        <p><strong>Document Hash:</strong> {notification.documentHash}</p>\r\n                        <p><strong>Time:</strong> {new Date(notification.timestamp * 1000).toLocaleString()}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}