{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\OneDrive\\\\\\u03A5\\u03C0\\u03BF\\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2\\\\FrontEnd\\\\frontend\\\\src\\\\FetchDocument.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = () => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDocuments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_documents');\n        setDocuments(response.data.documents);\n      } catch (err) {\n        setError('Error fetching documents');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDocuments();\n  }, []);\n  const downloadDocument = async document_hash => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get_document/${document_hash}`, {\n        responseType: 'blob' // Important to handle binary data\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${document_hash}.pdf`; // Provide a default name for the download\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    } catch (err) {\n      setError('Error downloading document');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading documents...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Uploaded Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => downloadDocument(doc.document_hash),\n          children: [\"Download \", doc.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, doc.document_hash, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DocumentList, \"vPpX9y5GrjLlQ9TCkQ56wUrwt2s=\");\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DocumentList","_s","documents","setDocuments","loading","setLoading","error","setError","fetchDocuments","response","get","data","err","downloadDocument","document_hash","responseType","url","window","URL","createObjectURL","Blob","a","document","createElement","href","download","body","appendChild","click","remove","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doc","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/alber/OneDrive/Υπολογιστής/FrontEnd/frontend/src/FetchDocument.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DocumentList = () => {\r\n    const [documents, setDocuments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchDocuments = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/get_documents');\r\n                setDocuments(response.data.documents);\r\n            } catch (err) {\r\n                setError('Error fetching documents');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDocuments();\r\n    }, []);\r\n\r\n    const downloadDocument = async (document_hash) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/get_document/${document_hash}`, {\r\n                responseType: 'blob', // Important to handle binary data\r\n            });\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `${document_hash}.pdf`; // Provide a default name for the download\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            a.remove();\r\n        } catch (err) {\r\n            setError('Error downloading document');\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading documents...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Uploaded Documents</h1>\r\n            <ul>\r\n                {documents.map((doc) => (\r\n                    <li key={doc.document_hash}>\r\n                        <button onClick={() => downloadDocument(doc.document_hash)}>\r\n                            Download {doc.title}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DocumentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}