{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\OneDrive\\\\\\u03A5\\u03C0\\u03BF\\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2\\\\FrontEnd\\\\frontend\\\\src\\\\FetchDocument.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentList = () => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [fileToUpdate, setFileToUpdate] = useState(null);\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const fetchDocuments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_documents');\n      const documentsWithDates = response.data.documents.map(doc => ({\n        ...doc,\n        timestamp: new Date(doc.timestamp * 1000).toLocaleString() // Convert Unix timestamp to a readable date\n      }));\n      setDocuments(documentsWithDates);\n    } catch (err) {\n      setError('Error fetching documents');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const viewDocument = document_hash => {\n    const url = `http://localhost:5000/get_document/${document_hash}`;\n    window.open(url, '_blank');\n  };\n  const handleFileChange = event => {\n    setFileToUpdate(event.target.files[0]);\n  };\n  const handleUpdate = async document => {\n    if (!fileToUpdate) return;\n    const formData = new FormData();\n    formData.append('file', fileToUpdate);\n    formData.append('sender', 'UserA');\n    formData.append('receiver', 'UserB');\n    formData.append('title', document.title);\n    formData.append('description', 'Updated file description');\n    formData.append('original_hash', document.document_hash);\n    try {\n      // Update document transaction\n      const response = await axios.post('http://localhost:5000/update_transaction', formData);\n      alert(response.data.message);\n\n      // Mine a new block\n      const mineResponse = await axios.get('http://localhost:5000/mine');\n      alert(mineResponse.data.message); // New block mined response\n\n      // Reset the file input and selected document\n      setFileToUpdate(null);\n      setSelectedDocument(null);\n      await fetchDocuments(); // Refresh the documents list to show the updated data\n    } catch (error) {\n      console.error('Error updating document:', error);\n      alert(\"There was an error submitting the transaction!\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading documents...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Uploaded Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewDocument(doc.document_hash),\n          children: doc.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDocument(doc),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: doc.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), \" \"]\n      }, doc.document_hash, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), selectedDocument && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Update Document: \", selectedDocument.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdate(selectedDocument),\n        children: \"Submit Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(DocumentList, \"sAdw0zzezLLNVlr3HnuFt3qUqjU=\");\n_c = DocumentList;\nexport default DocumentList;\nvar _c;\n$RefreshReg$(_c, \"DocumentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DocumentList","_s","documents","setDocuments","loading","setLoading","error","setError","fileToUpdate","setFileToUpdate","selectedDocument","setSelectedDocument","fetchDocuments","response","get","documentsWithDates","data","map","doc","timestamp","Date","toLocaleString","err","viewDocument","document_hash","url","window","open","handleFileChange","event","target","files","handleUpdate","document","formData","FormData","append","title","post","alert","message","mineResponse","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/alber/OneDrive/Υπολογιστής/FrontEnd/frontend/src/FetchDocument.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DocumentList = () => {\r\n    const [documents, setDocuments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [fileToUpdate, setFileToUpdate] = useState(null);\r\n    const [selectedDocument, setSelectedDocument] = useState(null);\r\n\r\n    const fetchDocuments = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/get_documents');\r\n            const documentsWithDates = response.data.documents.map(doc => ({\r\n                ...doc,\r\n                timestamp: new Date(doc.timestamp * 1000).toLocaleString(), // Convert Unix timestamp to a readable date\r\n            }));\r\n            setDocuments(documentsWithDates);\r\n        } catch (err) {\r\n            setError('Error fetching documents');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDocuments();\r\n    }, []);\r\n\r\n    const viewDocument = (document_hash) => {\r\n        const url = `http://localhost:5000/get_document/${document_hash}`;\r\n        window.open(url, '_blank');\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        setFileToUpdate(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpdate = async (document) => {\r\n        if (!fileToUpdate) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', fileToUpdate);\r\n        formData.append('sender', 'UserA');\r\n        formData.append('receiver', 'UserB');\r\n        formData.append('title', document.title);\r\n        formData.append('description', 'Updated file description');\r\n        formData.append('original_hash', document.document_hash);\r\n\r\n        try {\r\n            // Update document transaction\r\n            const response = await axios.post('http://localhost:5000/update_transaction', formData);\r\n            alert(response.data.message);\r\n\r\n            // Mine a new block\r\n            const mineResponse = await axios.get('http://localhost:5000/mine');\r\n            alert(mineResponse.data.message); // New block mined response\r\n\r\n            // Reset the file input and selected document\r\n            setFileToUpdate(null);\r\n            setSelectedDocument(null);\r\n            await fetchDocuments(); // Refresh the documents list to show the updated data\r\n\r\n        } catch (error) {\r\n            console.error('Error updating document:', error);\r\n            alert(\"There was an error submitting the transaction!\");\r\n        }\r\n    };\r\n\r\n    if (loading) return <div>Loading documents...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Uploaded Documents</h1>\r\n            <ul>\r\n                {documents.map((doc) => (\r\n                    <li key={doc.document_hash}>\r\n                        <button onClick={() => viewDocument(doc.document_hash)}>\r\n                            {doc.title}\r\n                        </button>\r\n                        <button onClick={() => setSelectedDocument(doc)}>Edit</button>\r\n                        <span>{doc.timestamp}</span> {/* Display the formatted timestamp */}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {selectedDocument && (\r\n                <div>\r\n                    <h2>Update Document: {selectedDocument.title}</h2>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                    <button onClick={() => handleUpdate(selectedDocument)}>Submit Update</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DocumentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}